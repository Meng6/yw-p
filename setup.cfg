[metadata]
long_description = file: README.md
long_description_content_type = text/markdown

[options]
package_dir =
    =src
packages = find:
include_package_data = True

[options.packages.find]
where=src
exclude =
    tests*
    docs*

[options.entry_points]
console_scripts =
    yw = yesworkflow.__main__:cli

################### pytest ####################
[tool:pytest]
testpaths =
    tests
addopts =
    --cov
    --strict-markers
xfail_strict = True

[coverage:run]
branch = True
source = yesworkflow

[coverage:paths]
source =
    src/yesworkflow/
    */site-packages/yesworkflow/

[coverage:report]
show_missing = True
skip_covered = True
;fail_under = 0      # increase later when we start implementing tests

################### mypy ######################
;[mypy]
;python_version = 3.7
;warn_unused_configs = True
;show_error_context = True
;pretty = True
;namespace_packages = True
;check_untyped_defs = True

################### flake8 ####################
[flake8]
max-line-length = 100
exclude =
    docs,
    # avoid spurious "unused import"
    */__init__.py,
    */cli.py,
ignore =
    # Whitespace before ':' (black compatibility)
    E203,
    # Too many leading '#' for block comment
    E266,
    # Expected 2 blank lines, found 0
    E302,
    # Line too long (let Black deal with line-lenght)
    E501,
    # Do not use variables named 'I', 'O', or 'l'
    E741,
    # Line break occurred before a binary operator (black compatibility)
    W503,

################### tox env ###################
# Test -- pytest (Default)
[tox:tox]
isolated_build = True
env_list =
    py37
    py38
    py39
    py310
    py311
    py312

[testenv]
deps =
    pytest
    pytest-html
    pytest-cov
    pytest-randomly
    pyyaml
    click
commands =
    pytest {posargs}

# Type Check -- mypy
;[testenv:typecheck]
;deps =
;    pytest
;    mypy
;commands =
;    mypy --ignore-missing-imports {posargs:src tests}

# String Formatting -- flynt
[testenv:fstring]
skip_install = True
deps =
    flynt
commands =
    flynt {posargs: src tests}

# Code Formatting -- black
[testenv:format]
skip_install = True
deps =
    black
commands =
    black {posargs: -- src tests}

# Sort Import -- isort
[testenv:sort_import]
skip_install = True
deps =
    isort
commands =
    isort {posargs: src tests}

# Linting -- flake8
[testenv:lint]
deps =
    flake8
    flake8-bugbear
commands =
    flake8 {posargs: src tests}